목표 : 
        기본적인 동적 계획법 접근 방법을 다른 문제에 적용하는 방법을 설명할 수 있다.
        동적 계획법에 대한 폭 넓은 이해
        상태 공간 축소 개념(동적 계획법 풀이에 사용되는 차원 크기, 연산 횟수 등을 최적화)
  
  
  -P와 NP
    P : 다항 시간(polynomial time) 내에 해답을 구할 수 있음. - O(n), O(n^2), O(log n) 등으로 표현 가능.
    NP : 비결정적 다항 시간(non-deterministic polynomial time) 문제
    주어진 문제의 솔루션을 검증하는 것은 쉽지만, 실제 솔루션을 만들어내는 작업은 매우 어렵다.
    P = NP? 라는 질문의 대답은 아니오이지만, 증명은 되지 않은 상황.
    NP에 속하는 많은 문제는 NP-Complete로 알려져 있으며, 이들 문제는 특별한 특성을 공유합니다.
    만약에 NP 문제 중 하나를 다항 시간처럼 효율적으로 해결하는 솔루션이 발견된다면, 해당 솔루션을 수정하여 다른 모든 NP 문제를 효율적으로 해결이 가능.
    특정 방법이 최선인지 판별하는 작업(검증)이 솔루션을 만들어내는 작업과 같은 수준의 복잡도를 요구하게 되는 경우 NP-완전 문제라 하기 어려움.
    
  -부분 집합의 합 문제 다시 보기.
    검증 : P에 해당
    솔루션 구성 : 다항 시간 복잡도를 가지지는 않음. --> pseudo-polynomial time
    NP-Complete에 해당한다고 할 수 있음.
    
  -배낭 문제(5장) 다시 보기.
    설명 : 용량 제한이 있는 배낭과 서로 다른 가격과 무게를 갖는 여러 물건이 주어질 경우, 배낭의 제한 용량을 넘지 않으면서 가방에 넣은 물건들의 가격 합이 최대가 되는 물건 조합 구하기.
    대표적인 NP - Complete 문제.
    0-1 knapsack문제로 부분집합의 합 문제를 해결할 때 사용했던 상태 변환 로직과 유사한 공통점을 발견 가능.
      집합의 원소 개수와 집합 원소의 합으로 크기가 한정된 2차원 검색 공간을 탐색하면서 새로운 부분집합의 합을 찾을 수 있는지 여부를 결정함.
      차이점은 단순히 특정 부분집합의 합이 존재하는지 여부를 기록하는 것이 아닌 무게를 고려해 최대 가격을 찾는다는 점.
    
